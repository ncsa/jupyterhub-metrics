name: Helm Chart Linting and Publishing

on:
  push:
    branches:
      - main
    paths:
      - 'chart/**'
      - '.github/workflows/helm-chart.yml'
  pull_request:
    paths:
      - 'chart/**'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --charts chart/

      - name: Helm lint
        run: helm lint chart/

      - name: Validate chart values
        run: |
          helm template test chart/ --debug --dry-run

  package-and-push:
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'release'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Extract version from release
        id: version
        run: |
          VERSION="${GITHUB_REF#refs/tags/v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update chart version
        run: |
          sed -i "s/^version:.*/version: ${{ steps.version.outputs.version }}/" chart/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${{ steps.version.outputs.version }}\"/" chart/Chart.yaml

      - name: Package Helm chart
        run: |
          helm package chart/ --destination .

      - name: Log in to GitHub Container Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Helm chart to GHCR
        run: |
          CHART_NAME=$(ls jupyterhub-metrics-*.tgz)
          helm push $CHART_NAME oci://ghcr.io/${{ github.repository_owner }}/charts

      - name: Upload chart as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./jupyterhub-metrics-${{ steps.version.outputs.version }}.tgz
          asset_name: jupyterhub-metrics-${{ steps.version.outputs.version }}.tgz
          asset_content_type: application/gzip
