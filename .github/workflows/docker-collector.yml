name: Build and Push Collector Docker Image

on:
  push:
    branches:
      - main
    paths:
      - "collector/**"
      - ".github/workflows/docker-collector.yml"
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/collector

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag with 'latest' on main branch pushes
            type=raw,value=latest,enable={{is_default_branch}}
            # Tag with version on release (e.g., v1.0.0 -> 1.0.0)
            type=semver,pattern={{version}}
            # Tag with major.minor on release (e.g., v1.0.0 -> 1.0)
            type=semver,pattern={{major}}.{{minor}}
            # Tag with major version on release (e.g., v1.0.0 -> 1)
            type=semver,pattern={{major}}
            # Tag with SHA for traceability
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./collector
          file: ./collector/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.meta.outputs.digest }}
          push-to-registry: true
