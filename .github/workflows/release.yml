name: Release Management

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            # Extract the relevant section from CHANGELOG.md
            CHANGELOG=$(sed -n "/## \[${VERSION}\]/,/## \[/p" CHANGELOG.md | \
              sed '$ d' || echo "See CHANGELOG.md for details")
          else
            CHANGELOG="Release version ${{ steps.version.outputs.version }}"
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          generate_release_notes: true

  validate-release:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Verify version consistency
        run: |
          CHART_VERSION=$(grep '^version:' chart/Chart.yaml | awk '{print $2}')
          CHART_APP_VERSION=$(grep '^appVersion:' chart/Chart.yaml | \
            awk '{print $2}' | tr -d '"')
          echo "Chart version: $CHART_VERSION"
          echo "Chart appVersion: $CHART_APP_VERSION"

          if [ "$CHART_VERSION" != "$CHART_APP_VERSION" ]; then
            echo "WARNING: Chart version and appVersion don't match"
          fi
