services:
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: jupyterhub-timescaledb
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:latest
    container_name: jupyterhub-grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_INSTALL_PLUGINS: grafana-clock-panel
      DB_HOST: timescaledb
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: unless-stopped

  collector:
    build:
      context: .
      dockerfile: Dockerfile.collector
    container_name: jupyterhub-collector
    environment:
      DB_HOST: timescaledb
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      KUBECTL_CONTEXT: ${KUBECTL_CONTEXT}
      COLLECTION_INTERVAL: ${COLLECTION_INTERVAL}
      NAMESPACE: ${NAMESPACE}
    volumes:
      - ~/.kube:/home/collector/.kube:ro
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: unless-stopped

volumes:
  timescale_data:
  grafana_data:
